<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
     xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation=
        "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <import resource="classpath:batchConfig.xml"/>
    <bean id="writer" class="pl.java.scalatech.skip.SkipWriter" p:invalidValue="40"/>  
    <bean id="reader" class="pl.java.scalatech.skip.SkipReader" p:invalidValue="40"/>
    <util:list id="processorList">
      <value>24</value>
    </util:list>
    <bean id="processor" class="pl.java.scalatech.retry.RetryProcessor" p:invalidValues-ref="processorList" p:thresholdRetry="50"/>
    <bean id="skipListener" class="pl.java.scalatech.skip.SkipSampleListener"/>
    <bean id="retryListener" class="pl.java.scalatech.retry.SimpleRepeatListener"/>
   <batch:job id="retryFirstJob" restartable="false">
     <batch:step id="retryFirstStep">
       <batch:tasklet>
         <batch:chunk  commit-interval="10" reader="reader" processor="processor" writer="writer" retry-limit="2" skip-limit="2" >
         
          <batch:skippable-exception-classes>
            <batch:include class="pl.java.scalatech.skip.MySkipException"/>
          </batch:skippable-exception-classes>
          <batch:retryable-exception-classes>
           <batch:include class="pl.java.scalatech.retry.UnexpectedSituation"/>
          </batch:retryable-exception-classes>
         </batch:chunk>   
         <batch:listeners>
            <batch:listener ref="retryListener"/>
         </batch:listeners>
         
       </batch:tasklet>
       <batch:listeners>
          <batch:listener ref="skipListener"/>
          
       </batch:listeners>
     </batch:step>
   </batch:job>
   
  </beans>